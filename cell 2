import chess
import chess.pgn
import random
import torch
import torch.nn as nn
import torch.optim as optim
import functools

# Define the neural network
class ChessNet(nn.Module):
    def __init__(self):
        super(ChessNet, self).__init__()
        self.fc1 = nn.Linear(64 * 12, 256)
        self.fc2 = nn.Linear(256, 128)
        self.fc3 = nn.Linear(128, 64)
        self.fc4 = nn.Linear(64, 1)

    def forward(self, x):
        x = torch.relu(self.fc1(x))
        x = torch.relu(self.fc2(x))
        x = torch.relu(self.fc3(x))
        x = torch.tanh(self.fc4(x))
        return x

# Add the rest of your code (minimax, evaluation, etc.)
# Insert the definitions of the rest of your functions (as you shared)
